//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIEventListenWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIEventListen), typeof(System.Object));
		L.RegFunction("AddClick", AddClick);
		L.RegFunction("RemoveClick", RemoveClick);
		L.RegFunction("RemoveAllClick", RemoveAllClick);
		L.RegFunction("DebugAction", DebugAction);
		L.RegFunction("New", _CreateUIEventListen);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUIEventListen(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UIEventListen obj = new UIEventListen();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UIEventListen.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIEventListen obj = (UIEventListen)ToLua.CheckObject<UIEventListen>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddClick(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIEventListen obj = (UIEventListen)ToLua.CheckObject<UIEventListen>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveClick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIEventListen obj = (UIEventListen)ToLua.CheckObject<UIEventListen>(L, 1);
			obj.RemoveAllClick();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DebugAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIEventListen obj = (UIEventListen)ToLua.CheckObject<UIEventListen>(L, 1);
			obj.DebugAction();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

